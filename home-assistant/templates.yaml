# veggie-garden-hydroponics
# Added for Outside tank calibration 25-07-13
# Updated logic to only use values in order and ignore 0 values
# in case we have a messed up calibration point. 25-07-14
# updated for calibration errors and misreporting tank gallons triggered by rain event 25-07-16
- sensor:
  - name: "Patio Tank Gallons"
    unique_id: patio_tank_gallons
    unit_of_measurement: "gal"
    state_class: measurement
    state: >
      {# Read the current raw HX711 sensor value (defaults to a known-bad number if unavailable) #}
      {% set raw = states('sensor.hydroponics_patio_raw_hx711_sensor') | float(999900) %}

      {# List of all calibration points: (gallons, raw value) #}
      {# Each state is converted to float. Unset or unavailable values default to 0. #}
      {% set all_points = [
        (0, states('input_number.raw_00_gallons') | float(0)),
        (5, states('input_number.raw_05_gallons') | float(0)),
        (10, states('input_number.raw_10_gallons') | float(0)),
        (15, states('input_number.raw_15_gallons') | float(0)),
        (20, states('input_number.raw_20_gallons') | float(0)),
        (25, states('input_number.raw_25_gallons') | float(0)),
      ] %}

      {# Reject calibration points that are still at 0 (invalid) #}
      {% set points = all_points | rejectattr(1, 'equalto', 0) | list %}

      {# If fewer than 2 calibration points are valid, return unknown #}
      {% if points | length < 2 %}
        {{ 'unknown' }}

      {% else %}
        {# Sort the remaining calibration points by raw value #}
        {% set sorted = points | sort(attribute=1) %}

        {# Determine the minimum and maximum calibration points #}
        {% set g_min, r_min = sorted[0] %}
        {% set g_max, r_max = sorted[-1] %}

        {# Clamp if raw value is below minimum calibrated range #}
        {% if raw <= r_min %}
          {{ g_min }}

        {# Clamp if raw value is above maximum calibrated range #}
        {% elif raw >= r_max %}
          {{ g_max }}

        {# Otherwise, interpolate between the nearest two points #}
        {% else %}
          {% for i in range(sorted | length - 1) %}
            {% set g1, r1 = sorted[i] %}
            {% set g2, r2 = sorted[i + 1] %}

            {# Check if the raw value is between this pair (either ascending or descending) #}
            {% if r1 <= raw <= r2 or r2 <= raw <= r1 %}
              {% set slope = (g2 - g1) / (r2 - r1) %}
              {% set gallons = g1 + slope * (raw - r1) %}
              {{ gallons | round(1) }}
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endif %}